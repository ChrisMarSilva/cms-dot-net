// <auto-generated />
using System;
using Cache.Api.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cache.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250320194612_AddProduts")]
    partial class AddProduts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cache.Api.Models.ProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasComment("Identificação única do produto.");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasComment("Descrição do produto.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasComment("Nome do produto.");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasComment("Preço do produto.");

                    b.HasKey("Id")
                        .HasName("PkProduct");

                    b.ToTable("TbProduct", null, t =>
                        {
                            t.HasComment("Informações de controle do produto.");
                        });
                });

            modelBuilder.Entity("Cache.Api.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasComment("Identificação única do usuario.");

                    b.Property<DateTime>("DtHrCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Data e hora da criação do registro.");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasComment("E-mail do usuario.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasComment("Nome do usuario.");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasComment("Senha do usuario.");

                    b.HasKey("Id")
                        .HasName("PkUser");

                    b.ToTable("TbUser", null, t =>
                        {
                            t.HasComment("Informações de controle do usuario.");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
