// <auto-generated />
using Catalogo.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Catalogo.API.Migrations;

[DbContext(typeof(AppDbContext))]
[Migration("20230311151912_AddDadosTables01")]
partial class AddDadosTables01
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "7.0.3")
            .HasAnnotation("Relational:MaxIdentifierLength", 64);

        modelBuilder.Entity("Catalogo.Domain.Models.Categoria", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("char(36)")
                    .HasColumnName("id");

                b.Property<DateTime?>("DataAlteracao")
                    .HasColumnType("datetime(6)")
                    .HasColumnName("data_alteracao");

                b.Property<DateTime>("DataCadastro")
                    .HasColumnType("datetime(6)")
                    .HasColumnName("data_cadastro");

                b.Property<string>("ImagemUrl")
                    .HasColumnType("varchar(300)")
                    .HasColumnName("imagem_url");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnType("varchar(80)")
                    .HasColumnName("nome");

                b.HasKey("Id");

                b.ToTable("Categoria", (string)null);

                b.HasData(
                    new
                    {
                        Id = new Guid("d96986d5-4889-45a7-a031-4f2c663251d6"),
                        DataCadastro = new DateTime(2023, 3, 11, 15, 19, 11, 800, DateTimeKind.Utc).AddTicks(3066),
                        Nome = "Categora 01"
                    },
                    new
                    {
                        Id = new Guid("a93044ab-55a8-40f6-9edb-bcf5848034d0"),
                        DataCadastro = new DateTime(2023, 3, 11, 15, 19, 11, 800, DateTimeKind.Utc).AddTicks(3085),
                        Nome = "Categora 02"
                    },
                    new
                    {
                        Id = new Guid("b32a2a72-28df-4c9f-9b42-d57546f64b59"),
                        DataCadastro = new DateTime(2023, 3, 11, 15, 19, 11, 800, DateTimeKind.Utc).AddTicks(3090),
                        Nome = "Categora 03"
                    });
            });

        modelBuilder.Entity("Catalogo.Domain.Models.Produto", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("char(36)")
                    .HasColumnName("id");

                b.Property<Guid>("CategoriaId")
                    .HasColumnType("char(36)")
                    .HasColumnName("categoria_id");

                b.Property<DateTime?>("DataAlteracao")
                    .HasColumnType("datetime(6)")
                    .HasColumnName("data_alteracao");

                b.Property<DateTime>("DataCadastro")
                    .HasColumnType("datetime(6)")
                    .HasColumnName("data_cadastro");

                b.Property<string>("Descricao")
                    .HasColumnType("varchar(300)")
                    .HasColumnName("descricao");

                b.Property<float>("Estoque")
                    .HasColumnType("float")
                    .HasColumnName("estoque");

                b.Property<string>("ImagemUrl")
                    .HasColumnType("varchar(300)")
                    .HasColumnName("imagem_url");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnType("varchar(80)")
                    .HasColumnName("nome");

                b.Property<decimal>("Preco")
                    .HasColumnType("decimal(10,2)")
                    .HasColumnName("preco");

                b.HasKey("Id");

                b.HasIndex("CategoriaId");

                b.ToTable("Produto", (string)null);

                b.HasData(
                    new
                    {
                        Id = new Guid("66cfdb2d-fb0d-401e-8f4c-260923210607"),
                        CategoriaId = new Guid("d96986d5-4889-45a7-a031-4f2c663251d6"),
                        DataCadastro = new DateTime(2023, 3, 11, 15, 19, 11, 800, DateTimeKind.Utc).AddTicks(3274),
                        Estoque = 100f,
                        Nome = "Produto 01",
                        Preco = 10m
                    },
                    new
                    {
                        Id = new Guid("aab9689a-3b89-4896-a060-e3b0ca7ad5bc"),
                        CategoriaId = new Guid("a93044ab-55a8-40f6-9edb-bcf5848034d0"),
                        DataCadastro = new DateTime(2023, 3, 11, 15, 19, 11, 800, DateTimeKind.Utc).AddTicks(3284),
                        Estoque = 200f,
                        Nome = "Produto 02",
                        Preco = 20m
                    },
                    new
                    {
                        Id = new Guid("896ffedf-3169-4058-9c62-e9f54e821ac2"),
                        CategoriaId = new Guid("b32a2a72-28df-4c9f-9b42-d57546f64b59"),
                        DataCadastro = new DateTime(2023, 3, 11, 15, 19, 11, 800, DateTimeKind.Utc).AddTicks(3289),
                        Estoque = 300f,
                        Nome = "Produto 03",
                        Preco = 30m
                    });
            });

        modelBuilder.Entity("Catalogo.Domain.Models.Produto", b =>
            {
                b.HasOne("Catalogo.Domain.Models.Categoria", "Categoria")
                    .WithMany("Produtos")
                    .HasForeignKey("CategoriaId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Categoria");
            });

        modelBuilder.Entity("Catalogo.Domain.Models.Categoria", b =>
            {
                b.Navigation("Produtos");
            });
#pragma warning restore 612, 618
    }
}
